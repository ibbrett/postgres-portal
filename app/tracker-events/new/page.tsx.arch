import Link from 'next/link'
//import {prisma} from '../db'
import {redirect} from 'next/navigation'
import {DateTime} from '@/components/DateTime'

async function CreateEvent(data: FormData) {
  'use server'

  const summary = data.get('summary')?.valueOf()
  if (typeof summary !== 'string' || summary.length === 0) {
    throw new Error('Invalid Summary')
  }

  const detail = data.get('detail')?.valueOf()
  if (typeof detail !== 'string') {
    throw new Error('Invalid Detail')
  }

  // const ts = data.get("ts")?.valueOf();
  // let ts = parseInt(data.get("ts"), 10);
  // ts = 1234;
  const dateTime = data.get('ts')
  console.log('## DEBUG DATE/TIME', dateTime, typeof dateTime)

  if (typeof dateTime !== 'string' || dateTime.length === 0) {
    throw new Error('Invalid Date/Time')
  }

  const date = new Date(dateTime)
  const ms = date.getTime()
  // const unixTimestamp = Math.floor(ms / 1000);
  const unixTimestamp = ms

  const complete = data.get('complete') === null ? false : true
  console.log('complete', complete)

  const section_id = 2

  const payload = {
    data: {section_id, summary, complete, ts: unixTimestamp, detail: detail},
  }
  console.log(payload)

  const postFormData = async () => {
    const response = await fetch('http://localhost:3000/api/create-event', {
      method: 'POST',
      body: JSON.stringify(payload),
    })

    /*
    const response = await fetch('http://localhost:3000/api/create-event', {
      method: 'POST',
      body: JSON.stringify(payload),
      headers: {
        'Content-Type': 'application/json',
      },
    })
    */
    const data = await response.json()
    console.log(data)
  }
  postFormData()

  // ts is required
  // temp
  // ts = 0
  // await prisma.event.create({data: {title, ts: unixTimestamp, detail: detail}})

  // ***** ADD CREATE RECORD HERE
  redirect('/')
}

// const formFieldStyle = "border border-slate-300 text-slate-300 bg-transparent px-2 py-1 rounded focus-within:border-slate-100 outline-none";
const formFieldStyle =
  'border border-black text-black bg-white px-2 py-1 rounded focus-within:border-slate-100 outline-none'
const formButtonStyle =
  'border border-slate-300 text-slate-300 px-2 py-1 rounded hover:bg-slate-700 focus-within:bg-slate-700 outline-none'

export default function Page() {
  return (
    <>
      <header className="flex justify-between mb-4 items-center">
        <h1 className="text-2xl">New Event</h1>
      </header>
      <form action={CreateEvent} className="flex gap-2 flex-col">
        <span>Summary ( Title )</span>{' '}
        <input type="text" name="summary" className={formFieldStyle} />
        <span>Detail</span> <textarea name="detail" className={formFieldStyle} />
        <span>
          Completed <input type="checkbox" name="complete" />
        </span>
        <span>Date / Time</span>
        <DateTime name="ts" />
        <div className="flex gap-1 justify-end">
          <Link href=".." className={formButtonStyle}>
            Cancel
          </Link>
          <button type="submit" className={formButtonStyle}>
            Create
          </button>
        </div>
      </form>
    </>
  )
}
